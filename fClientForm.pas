unit fClientForm;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls,
  uROClient, uROClientIntf, uRORemoteService, uROBinMessage,
  uROWinInetHTTPChannel,
  System.TypInfo, uROAsync, uROServerLocator, uROChannelAwareComponent,
  uROBaseConnection, uROTransportChannel, uROBaseHTTPClient, uROComponent,
  uROMessage, Vcl.ComCtrls, uGame;

type
  TClientForm = class(TForm)
    ROMessage: TROBinMessage;
    ROChannel: TROWinInetHTTPChannel;
    RORemoteService: TRORemoteService;
    pgc1: TPageControl;
    tsEmulator: TTabSheet;
    btnLaunch: TButton;
    btnQuit: TButton;
    btnQuitAll: TButton;
    lblEmulatorIndex: TLabel;
    edtEmulatorIndex: TEdit;
    lblPackageName: TLabel;
    edtPackageName: TEdit;
    btnRunApp: TButton;
    btnKillApp: TButton;
    btnList2: TButton;
    mmoLog: TMemo;
    procedure btnLaunchClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnQuitClick(Sender: TObject);
    procedure btnRunAppClick(Sender: TObject);
    procedure btnKillAppClick(Sender: TObject);
    procedure btnQuitAllClick(Sender: TObject);
    procedure btnList2Click(Sender: TObject);
  private
    { Private declarations }

  public
    { Public declarations }
  end;

var
  ClientForm: TClientForm;

implementation

{
  The unit GameLibrary_Intf.pas will be generated by the RemObjects preprocessor the first time you
  compile your server application. Make sure to do that before trying to compile the client.

  To invoke your server simply typecast your server to the name of the service interface like this:

  (RORemoteService as IGameService).Sum(1,2)
}

uses GameLibrary_Intf;

{$R *.dfm}

procedure TClientForm.btnKillAppClick(Sender: TObject);
var
  index: Integer;
begin
  if TryStrToInt(edtEmulatorIndex.Text, index) then
    TLd.KillApp(index, edtPackageName.Text)
  else
    ShowMessage('索引错误');

end;

procedure TClientForm.btnLaunchClick(Sender: TObject);
var
  index: Integer;
begin
  if TryStrToInt(edtEmulatorIndex.Text, index) then
    TLd.Launch(index)
  else
    ShowMessage('索引错误');
end;

procedure TClientForm.btnList2Click(Sender: TObject);
var
  arr, arrAll: TArray<string>;
  I: Integer;
  s: string;
  curr: string;
begin
  arrAll := TLd.List2.Split([#10]);
  if Length(arrAll) > 1 then
  begin
    for I := Low(arrAll) to High(arrAll) do
    begin
      arr := arrAll[I].Split([',']);
      // 索引，标题，顶层窗口句柄，绑定窗口句柄，是否进入android，进程PID，VBox进程PID
      if Length(arr) = 7 then
      begin
        mmoLog.Lines.Add('------------begin--------------');

        curr := Format
          ('索引:%s，标题:%s，顶层窗口句柄:%s，绑定窗口句柄:%s，是否进入android:%s，进程PID:%s，VBox进程PID:%s',
          [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]);
        mmoLog.Lines.Add(curr);
        mmoLog.Lines.Add('------------end----------------');
        // s := s + #10 + '----------------------------' + #10 + curr;
      end;
    end;
  end;
  // ShowMessage(s);
end;

procedure TClientForm.btnQuitAllClick(Sender: TObject);
begin
  TLd.QuitAll;
end;

procedure TClientForm.btnQuitClick(Sender: TObject);
var
  index: Integer;
begin
  if TryStrToInt(edtEmulatorIndex.Text, index) then
    TLd.Quit(index)
  else
    ShowMessage('索引错误');

end;

procedure TClientForm.btnRunAppClick(Sender: TObject);
var
  index: Integer;
begin
  if TryStrToInt(edtEmulatorIndex.Text, index) then
    TLd.RunApp(index, edtPackageName.Text)
  else
    ShowMessage('索引错误');

end;

procedure TClientForm.FormCreate(Sender: TObject);
begin
  TLd.FilePath := 'D:\Changzhi\dnplayer2\dnconsole.exe';
  mmoLog.Clear;
end;

end.
